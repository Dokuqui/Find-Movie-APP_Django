name: Run Django App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install linter
        run: pip install flake8

      - name: Lint code
        run: flake8 . --max-line-length=120

  test:
    if: "!contains(github.event.head_commit.message, '[doc]')"
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [ build, lint ]
    env:
      OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Reuse Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Set up test database
        run: |
          python manage.py makemigrations
          python manage.py migrate         

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
        continue-on-error: true

      - name: Generate coverage report
        run: |
          coverage report -m
          coverage xml -o coverage.xml
        continue-on-error: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

  deploy:
    if: "!contains(github.event.head_commit.message, '[doc]')"
    name: Deploy on Heroku
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - uses: actions/checkout@v4

      - name: Reuse Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/prod.txt

      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "film-hunt"
          heroku_email: "doku_isv@icloud.com"
          usedocker: true
